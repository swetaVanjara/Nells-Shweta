name: NellsPay iOS
on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      xcode-version:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      package-name:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
    secrets:
      p12-cert:
        required: true
      p12-cert-password:
        required: true
      appstore-issuer:
        required: true
      appstore-keyid:
        required: true
      appstore-private-key:
        required: true
      provisioning-profile:
        required: false
      keychain-password:
        required: false
jobs:
  build-ios:
    runs-on: macos-15
    name: iOS Publish
    environment: dev

    steps:
      # Checkout code
      - uses: maxim-lobanov/setup-xcode@v1
        name: Set XCode version
        with:
          xcode-version: ${{ inputs.xcode-version }}

      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          path: ${{ inputs.project-folder }}

      - run: |
          echo "PWD=$(pwd)"
          ls -R | head -50

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}
      
      - name: Install Apple certificate and provisioning profile
        env:
          p12-file-base64: ${{ secrets.p12-cert }}
          P12_PASSWORD: ${{ secrets.p12-cert-password }}
          provisioning-profile: ${{ secrets.provisioning-profile }}
          keychain-password: ${{ secrets.keychain-password }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      # # Optional: clear stale temp keychain name
      # - name: Cleanup stale temp keychain
      #   run: security delete-keychain signing_temp.keychain || true

      # - name: Import cert
      #   id: certs
      #   uses: apple-actions/import-codesign-certs@v2
      #   with:
      #     p12-file-base64: ${{ secrets.p12-cert }}
      #     p12-password: ${{ secrets.p12-cert-password }}

      # - name: Download Provisioning Profiles
      #   id: provisioning
      #   uses: apple-actions/download-provisioning-profiles@v1
      #   with: 
      #       bundle-id: ${{ inputs.package-name }}
      #       profile-type: 'IOS_APP_STORE'
      #       issuer-id: ${{ secrets.appstore-issuer }}
      #       api-key-id: ${{ secrets.appstore-keyid }}
      #       api-private-key: ${{ secrets.appstore-private-key }}
      # - name: Version the app
      #   uses: managedcode/MAUIAppVersion@v1
      #   with:
      #     csproj: ${{ inputs.project-file }}
      #     version: ${{ github.run_number }}
      #     displayVersion: ${{ inputs.build-version }}.${{ github.run_number }}
      #     printFile: true

      # # - name: Publish the iOS app (signed)
      # #   run: |
      # #     dotnet publish "${{ inputs.project-file }}" \
      # #       -c "${{ inputs.build-config }}" \
      # #       "-f:${{ inputs.dotnet-version-target }}-ios" \
      # #       -p:ArchiveOnBuild=true \
      # #       -p:EnableAssemblyILStripping=false \
      # #       -p:CodesignKey="Apple Distribution: NellsPay Ltd (DK7JA7VZ2D)" \
      # #       --no-restore